{"ast":null,"code":"var _jsxFileName = \"/Users/toharayash/Desktop/technion/semester8/iot/iot-web-app/src/components/MachinesPage/MachinePage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, CircularProgress, Dialog, DialogActions, DialogContent, Typography, TextField, DialogTitle, DialogContentText } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { addMachineDoc, getMachinesDocs } from \"../../firebase/dbRef\";\nimport { MachineCard } from \"./MachineCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MachinePages = () => {\n  _s();\n\n  const [result, setResult] = useState();\n  const [refetch, setRefetch] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [machineId, setMachineId] = useState(\"\");\n  const [machineName, setMachineName] = useState(\"\");\n  const [machineDuration, setMachineDuration] = useState(\"\");\n  const [machinePrem, setMachinePrem] = useState(\"\");\n  useEffect(() => {\n    setRefetch(false);\n    let active = true;\n    load();\n    return () => {\n      active = false;\n    };\n\n    async function load() {\n      setResult(undefined); // this is optional\n\n      const res = await getMachinesDocs();\n\n      if (!active) {\n        return;\n      }\n\n      setResult(res);\n    }\n  }, [refetch]);\n\n  const handleChangeName = event => {\n    setMachineName(event.target.value);\n  };\n\n  const handleChangeID = event => {\n    setMachineId(event.target.value);\n  };\n\n  const handleChangeDuration = event => {\n    setMachineDuration(event.target.value);\n  };\n\n  const handleChangePremission = event => {\n    setMachinePrem(event.target.value);\n  };\n\n  const handleRefetch = () => {\n    setRefetch(true);\n  };\n\n  const submitMachine = () => {\n    if (machineId === \"\" || machineName === \"\" || machineDuration === \"\" || machinePrem === \"\") {\n      alert(\"You didnt enter valid parametrs\");\n    } else {\n      addMachineDoc({\n        key: machineId,\n        name: machineName,\n        duration: machineDuration,\n        perm_level: machinePrem\n      });\n    }\n\n    setModalIsOpen(false);\n    handleRefetch();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \" Machines \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => setModalIsOpen(true),\n          children: \"Add a new Machine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), !result ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          gap: \"8px\",\n          maxWidth: \"700px\",\n          flexWrap: \"wrap\"\n        },\n        children: result && result.map(item => {\n          var _item$machineId, _item$machineId2, _item$name, _item$duration, _item$perm_level;\n\n          return /*#__PURE__*/_jsxDEV(MachineCard, {\n            machineId: (_item$machineId2 = item === null || item === void 0 ? void 0 : item.machineId) !== null && _item$machineId2 !== void 0 ? _item$machineId2 : \"\",\n            machineName: (_item$name = item === null || item === void 0 ? void 0 : item.name) !== null && _item$name !== void 0 ? _item$name : \"\",\n            duration: (_item$duration = item === null || item === void 0 ? void 0 : item.duration) !== null && _item$duration !== void 0 ? _item$duration : \"\",\n            perm_level: (_item$perm_level = item === null || item === void 0 ? void 0 : item.perm_level) !== null && _item$perm_level !== void 0 ? _item$perm_level : \"\",\n            refetch: handleRefetch\n          }, (_item$machineId = item === null || item === void 0 ? void 0 : item.machineId) !== null && _item$machineId !== void 0 ? _item$machineId : \"\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: modalIsOpen,\n      onClose: () => setModalIsOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Add a new Machine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Name\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"standard\",\n          onChange: handleChangeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Machine ID\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"standard\",\n          onChange: handleChangeID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Duration (in minutes)\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"standard\",\n          onChange: handleChangeDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Permission level\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"standard\",\n          onChange: handleChangePremission\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setModalIsOpen(false),\n          children: \" Cancel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: submitMachine,\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MachinePages, \"1oR4xAkdRFbL21lDqKXEvSpoNHo=\");\n\n_c = MachinePages;\n\nvar _c;\n\n$RefreshReg$(_c, \"MachinePages\");","map":{"version":3,"names":["Box","Button","CircularProgress","Dialog","DialogActions","DialogContent","Typography","TextField","DialogTitle","DialogContentText","React","useEffect","useState","addMachineDoc","getMachinesDocs","MachineCard","MachinePages","result","setResult","refetch","setRefetch","modalIsOpen","setModalIsOpen","machineId","setMachineId","machineName","setMachineName","machineDuration","setMachineDuration","machinePrem","setMachinePrem","active","load","undefined","res","handleChangeName","event","target","value","handleChangeID","handleChangeDuration","handleChangePremission","handleRefetch","submitMachine","alert","key","name","duration","perm_level","display","justifyContent","marginBottom","gap","maxWidth","flexWrap","map","item"],"sources":["/Users/toharayash/Desktop/technion/semester8/iot/iot-web-app/src/components/MachinesPage/MachinePage.tsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  Typography,\n  TextField,\n  DialogTitle,\n  DialogContentText,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { addMachineDoc, getMachinesDocs } from \"../../firebase/dbRef\";\nimport { MachineCard } from \"./MachineCard\";\n\nexport const MachinePages = () => {\n  const [result, setResult] = useState<any>();\n  const [refetch, setRefetch] = useState<boolean>(false);\n\n  const [modalIsOpen, setModalIsOpen] = useState<boolean>(false);\n  const [machineId, setMachineId] = useState<string>(\"\");\n  const [machineName, setMachineName] = useState<string>(\"\");\n  const [machineDuration, setMachineDuration] = useState<string>(\"\");\n  const [machinePrem, setMachinePrem] = useState<string>(\"\");\n\n  useEffect(() => {\n    setRefetch(false);\n    let active = true;\n    load();\n    return () => {\n      active = false;\n    };\n\n    async function load() {\n      setResult(undefined); // this is optional\n      const res = await getMachinesDocs();\n      if (!active) {\n        return;\n      }\n      setResult(res);\n    }\n  }, [refetch]);\n\n  const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMachineName(event.target.value);\n  };\n\n  const handleChangeID = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMachineId(event.target.value);\n  };\n\n  const handleChangeDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMachineDuration(event.target.value);\n  };\n\n  const handleChangePremission = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setMachinePrem(event.target.value);\n  };\n\n  const handleRefetch = () => {\n    setRefetch(true);\n  };\n\n  const submitMachine = () => {\n    if (machineId === \"\" || machineName === \"\" || machineDuration === \"\" || machinePrem === \"\") {\n      alert(\"You didnt enter valid parametrs\");\n    } else {\n      addMachineDoc({\n        key: machineId,\n        name: machineName,\n        duration: machineDuration,\n        perm_level: machinePrem,\n      });\n    }\n    setModalIsOpen(false);\n    handleRefetch();\n  };\n\n  return (\n    <>\n      <Box>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <Typography variant=\"h4\"> Machines </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => setModalIsOpen(true)}\n          >\n            Add a new Machine\n          </Button>\n        </Box>\n        {!result ? (\n          <CircularProgress />\n        ) : (\n          <Box\n            sx={{\n              display: \"flex\",\n              gap: \"8px\",\n              maxWidth: \"700px\",\n              flexWrap: \"wrap\",\n            }}\n          >\n            {result &&\n              result.map((item: any) => (\n                <MachineCard\n                  key={item?.machineId ?? \"\"}\n                  machineId={item?.machineId ?? \"\"}\n                  machineName={item?.name ?? \"\"}\n                  duration={item?.duration ?? \"\"}\n                  perm_level={item?.perm_level ?? \"\"}\n                  refetch={handleRefetch}\n                />\n              ))}\n          </Box>\n        )}\n      </Box>\n\n      <Dialog open={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n        <DialogTitle>Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Add a new Machine</DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={handleChangeName}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Machine ID\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={handleChangeID}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Duration (in minutes)\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={handleChangeDuration}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Permission level\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={handleChangePremission}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setModalIsOpen(false)}> Cancel </Button>\n          <Button onClick={submitMachine}> Submit </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}